# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: schema.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cschema.proto\x12\x0cMyKafkaTopic\"D\n\x05Topic\x12\x0f\n\x07seq_num\x18\x01 \x02(\r\x12\n\n\x02ts\x18\x02 \x01(\x01\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x10\n\x04\x64\x61ta\x18\x04 \x03(\rB\x02\x10\x01')



_TOPIC = DESCRIPTOR.message_types_by_name['Topic']
Topic = _reflection.GeneratedProtocolMessageType('Topic', (_message.Message,), {
  'DESCRIPTOR' : _TOPIC,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:MyKafkaTopic.Topic)
  })
_sym_db.RegisterMessage(Topic)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TOPIC.fields_by_name['data']._options = None
  _TOPIC.fields_by_name['data']._serialized_options = b'\020\001'
  _TOPIC._serialized_start=30
  _TOPIC._serialized_end=98
# @@protoc_insertion_point(module_scope)
